


ARM Macro Assembler    Page 1 


    1 00000000         ; Start of file ReversePolish.s
    2 00000000         ;
    3 00000000         ; Copyright 2017 University of Dublin. All Rights Reserv
                       ed.
    4 00000000         ;
    5 00000000         ; Design, implement, test an ARM Assembly Language progr
                       am that
    6 00000000         ; evaluates Reverse Polish Notation (RPN) expressions. Y
                       our solution 
    7 00000000         ; should use problem decomposition with appropriate subr
                       outines.
    8 00000000         ; Use memory addresses descending from 0xA1000400 for st
                       ack operations.
    9 00000000         ; 
   10 00000000         ; Your program should evaluate a single RPN expression, 
                       rpnexp, stored 
   11 00000000         ; as a NULL-terminated ASCII string in memory and store 
                       the result in r0.
   12 00000000         ; You may assume that the string contains only operands,
                        operators and 
   13 00000000         ; spaces. Operators and operands are seperated by a sing
                       le space character 
   14 00000000         ; (0x20). You may also assume that the RPN expression re
                       presented in the 
   15 00000000         ; string is valid.
   16 00000000         ; 
   17 00000000         
   18 00000000                 AREA             ReversePolish, CODE, READONLY
   19 00000000                 IMPORT           main
   20 00000000                 EXPORT           start
   21 00000000         start
   22 00000000         
   23 00000000         ; Changes above this line are discarded by CODEMARK.
   24 00000000         ; Enter your solution between dashed lines only.
   25 00000000         ; ARM syntax requires instructions to be indented by
   26 00000000         ; at least one space or tab.
   27 00000000         ; -------------- start cut ------------------------
   28 00000000 E3A00000        LDR              r0, =0
   29 00000004 E3A08002        LDR              r8, =2      ;space flag, 0 mean
                                                            s no prev space
   30 00000008 E59F2154        LDR              r2, =rpnexp
   31 0000000C E59F1154        LDR              r1, =0xA1000400
   32 00000010 EA000025        B                loop
   33 00000014 E353006E 
                       wh1     CMP              r3, #'n'
   34 00000018 0A000013        BEQ              negate
   35 0000001C E3530021        CMP              r3, #'!'
   36 00000020 0A000017        BEQ              fact
   37 00000024 E353005E        CMP              r3, #'^'
   38 00000028 0A000027        BEQ              op
   39 0000002C E3530030        CMP              r3, #0x30
   40 00000030 2A000000        BHS              num
   41 00000034 EA000024        B                op
   42 00000038 E2433030 
                       num     SUB              r3, #0x30
   43 0000003C         ;push to stack (descending)
   44 0000003C E3580000        CMP              r8, #0      ;no prev space
   45 00000040 1A000005        BNE              norm        ;no space prev
   46 00000044 E5914000        LDR              r4, [r1]



ARM Macro Assembler    Page 2 


   47 00000048 E3A0500A        LDR              r5, =0xA
   48 0000004C E0040495        MUL              r4, r5, r4
   49 00000050 E0843003        ADD              r3, r4, r3
   50 00000054 E5813000        STR              r3, [r1]
   51 00000058 EA000013        B                loop
   52 0000005C E2411004 
                       norm    SUB              r1, #4
   53 00000060 E5813000        STR              r3, [r1]
   54 00000064 E3A08000        LDR              r8, =0
   55 00000068 EA00000F        B                loop
   56 0000006C E5914000 
                       negate  LDR              r4, [r1]
   57 00000070 E1E04004        MVN              r4, r4
   58 00000074 E2844001        ADD              r4, #1
   59 00000078 E5814000        STR              r4, [r1]
   60 0000007C E3A08000        LDR              r8, =0
   61 00000080 EA000009        B                loop
   62 00000084 E5913000 
                       fact    LDR              r3, [r1]
   63 00000088 E3A04001        MOV              r4, #1
   64 0000008C E1B05003        MOVS             r5, r3
   65 00000090 E3550001 
                       wh4     CMP              r5, #1
   66 00000094 9A000002        BLS              endwh4
   67 00000098 E0040495        MUL              r4, r5, r4
   68 0000009C E2555001        SUBS             r5, #1
   69 000000A0 EAFFFFFA        B                wh4
   70 000000A4 E5814000 
                       endwh4  STR              r4, [r1]
   71 000000A8 EAFFFFFF        B                loop
   72 000000AC E4D23001 
                       loop    LDRB             r3, [r2], #1
   73 000000B0 E3530000        CMP              r3, #0
   74 000000B4 0A000028        BEQ              fin
   75 000000B8 E3530020        CMP              r3, #0x20
   76 000000BC 0A000000        BEQ              flip
   77 000000C0 EAFFFFD3        B                wh1
   78 000000C4 E3A08001 
                       flip    LDR              r8, =1      ;have a space
   79 000000C8 EAFFFFF7        B                loop
   80 000000CC         ;need to pull from stack for operation
   81 000000CC E5914000 
                       op      LDR              r4, [r1]
   82 000000D0 E2811004        ADD              r1, #4
   83 000000D4 E5915000        LDR              r5, [r1]
   84 000000D8 E2811004        ADD              r1, #4
   85 000000DC E353002A        CMP              r3, #'*'
   86 000000E0 0A000007        BEQ              times
   87 000000E4 E353002B        CMP              r3, #'+'
   88 000000E8 0A000007        BEQ              plus
   89 000000EC E353002D        CMP              r3, #'-'
   90 000000F0 0A000007        BEQ              minus
   91 000000F4 E353005E        CMP              r3, #'^'
   92 000000F8 0A000007        BEQ              pow
   93 000000FC E353002F        CMP              r3, #'/'
   94 00000100 0A00000B        BEQ              divide
   95 00000104 E0060495 
                       times   MUL              r6, r5, r4  ;multiply function
   96 00000108 EA000010        B                endop



ARM Macro Assembler    Page 3 


   97 0000010C E0956004 
                       plus    ADDS             r6, r5, r4  ;add function
   98 00000110 EA00000E        B                endop
   99 00000114 E0556004 
                       minus   SUBS             r6, r5, r4  ;subtract function
  100 00000118 EA00000C        B                endop
  101 0000011C E3A06001 
                       pow     MOV              r6, #1      ;looped multiplicat
                                                            ion (power)
  102 00000120 E1B05005        MOVS             r5, r5
  103 00000124         wh3
  104 00000124 0A000009        BEQ              endop
  105 00000128 E0060695        MUL              r6, r5, r6
  106 0000012C E2544001        SUBS             r4, #1
  107 00000130 EAFFFFFB        B                wh3
  108 00000134 E3A06000 
                       divide  LDR              r6, =0      ;looped subtraction
                                                             (division)
  109 00000138 E1B05005        MOVS             r5, r5
  110 0000013C         wh2
  111 0000013C 0A000003        BEQ              endop
  112 00000140 E0555004        SUBS             r5, r4
  113 00000144 4A000001        BMI              endop
  114 00000148 E2866001        ADD              r6, #1
  115 0000014C EAFFFFFA        B                wh2
  116 00000150 E2411004 
                       endop   SUB              r1, #4
  117 00000154 E5816000        STR              r6, [r1]
  118 00000158 EAFFFFD3        B                loop
  119 0000015C E5910000 
                       fin     LDR              r0, [r1]    ;end of running, sh
                                                            ould only be one nu
                                                            mber on stack 
  120 00000160         ; -------------- end cut --------------------------
  121 00000160         ; Changes below this line are discarded by CODEMARK.
  122 00000160         ; Enter your solution between dashed lines only.
  123 00000160         
  124 00000160 EAFFFFFE 
                       stop    B                stop
  125 00000164 00000000 
              A1000400         AREA             ReversePolish, DATA, READWRITE
  126 0000016C 32 20 35 
              20 21 20 
              31 30 20 
              2B 20 2A 
              00       rpnexp  DCB              "2 5 ! 10 + *",0
  127 00000179                 END
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\reversepolish.d -o.\objects\reversepolish.o -ID:\Utilities\Keil\ARM\RV31
\INC -ID:\Utilities\Keil\ARM\CMSIS\Include -ID:\Utilities\Keil\ARM\INC\Philips 
--predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predefine="__UVIS
ION_VERSION SETA 524" --predefine="NO_CLOCK_SETUP SETA 1" --predefine="NO_EMC_S
ETUP SETA 1" --predefine="RAM_INTVEC SETA 1" --predefine="RAM_MODE SETA 1" --pr
edefine="REMAP SETA 1" --list=.\listings\reversepolish.lst ReversePolish.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ReversePolish 00000000

Symbol: ReversePolish
   Definitions
      At line 18 in file ReversePolish.s
   Uses
      None
Comment: ReversePolish unused
divide 00000134

Symbol: divide
   Definitions
      At line 108 in file ReversePolish.s
   Uses
      At line 94 in file ReversePolish.s
Comment: divide used once
endop 00000150

Symbol: endop
   Definitions
      At line 116 in file ReversePolish.s
   Uses
      At line 96 in file ReversePolish.s
      At line 98 in file ReversePolish.s
      At line 100 in file ReversePolish.s
      At line 104 in file ReversePolish.s
      At line 111 in file ReversePolish.s
      At line 113 in file ReversePolish.s

endwh4 000000A4

Symbol: endwh4
   Definitions
      At line 70 in file ReversePolish.s
   Uses
      At line 66 in file ReversePolish.s
Comment: endwh4 used once
fact 00000084

Symbol: fact
   Definitions
      At line 62 in file ReversePolish.s
   Uses
      At line 36 in file ReversePolish.s
Comment: fact used once
fin 0000015C

Symbol: fin
   Definitions
      At line 119 in file ReversePolish.s
   Uses
      At line 74 in file ReversePolish.s
Comment: fin used once
flip 000000C4

Symbol: flip
   Definitions
      At line 78 in file ReversePolish.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 76 in file ReversePolish.s
Comment: flip used once
loop 000000AC

Symbol: loop
   Definitions
      At line 72 in file ReversePolish.s
   Uses
      At line 32 in file ReversePolish.s
      At line 51 in file ReversePolish.s
      At line 55 in file ReversePolish.s
      At line 61 in file ReversePolish.s
      At line 71 in file ReversePolish.s
      At line 79 in file ReversePolish.s
      At line 118 in file ReversePolish.s

minus 00000114

Symbol: minus
   Definitions
      At line 99 in file ReversePolish.s
   Uses
      At line 90 in file ReversePolish.s
Comment: minus used once
negate 0000006C

Symbol: negate
   Definitions
      At line 56 in file ReversePolish.s
   Uses
      At line 34 in file ReversePolish.s
Comment: negate used once
norm 0000005C

Symbol: norm
   Definitions
      At line 52 in file ReversePolish.s
   Uses
      At line 45 in file ReversePolish.s
Comment: norm used once
num 00000038

Symbol: num
   Definitions
      At line 42 in file ReversePolish.s
   Uses
      At line 40 in file ReversePolish.s
Comment: num used once
op 000000CC

Symbol: op
   Definitions
      At line 81 in file ReversePolish.s
   Uses
      At line 38 in file ReversePolish.s
      At line 41 in file ReversePolish.s

plus 0000010C




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

Symbol: plus
   Definitions
      At line 97 in file ReversePolish.s
   Uses
      At line 88 in file ReversePolish.s
Comment: plus used once
pow 0000011C

Symbol: pow
   Definitions
      At line 101 in file ReversePolish.s
   Uses
      At line 92 in file ReversePolish.s
Comment: pow used once
rpnexp 0000016C

Symbol: rpnexp
   Definitions
      At line 126 in file ReversePolish.s
   Uses
      At line 30 in file ReversePolish.s
Comment: rpnexp used once
start 00000000

Symbol: start
   Definitions
      At line 21 in file ReversePolish.s
   Uses
      At line 20 in file ReversePolish.s
Comment: start used once
stop 00000160

Symbol: stop
   Definitions
      At line 124 in file ReversePolish.s
   Uses
      At line 124 in file ReversePolish.s
Comment: stop used once
times 00000104

Symbol: times
   Definitions
      At line 95 in file ReversePolish.s
   Uses
      At line 86 in file ReversePolish.s
Comment: times used once
wh1 00000014

Symbol: wh1
   Definitions
      At line 33 in file ReversePolish.s
   Uses
      At line 77 in file ReversePolish.s
Comment: wh1 used once
wh2 0000013C

Symbol: wh2
   Definitions
      At line 110 in file ReversePolish.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 115 in file ReversePolish.s
Comment: wh2 used once
wh3 00000124

Symbol: wh3
   Definitions
      At line 103 in file ReversePolish.s
   Uses
      At line 107 in file ReversePolish.s
Comment: wh3 used once
wh4 00000090

Symbol: wh4
   Definitions
      At line 65 in file ReversePolish.s
   Uses
      At line 69 in file ReversePolish.s
Comment: wh4 used once
23 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

main 00000000

Symbol: main
   Definitions
      At line 19 in file ReversePolish.s
   Uses
      None
Comment: main unused
1 symbol
364 symbols in table
