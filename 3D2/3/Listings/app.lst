


ARM Macro Assembler    Page 1 


    1 00000000         ; Definitions  -- references to 'UM' are to the User Man
                       ual.
    2 00000000         
    3 00000000         ; Timer Stuff -- UM, Table 173
    4 00000000         
    5 00000000 E0004000 
                       T0      equ              0xE0004000  ; Timer 0 Base Addr
                                                            ess
    6 00000000 E0008000 
                       T1      equ              0xE0008000
    7 00000000         
    8 00000000 00000000 
                       IR      equ              0           ; Add this to a tim
                                                            er's base address t
                                                            o get actual regist
                                                            er address
    9 00000000 00000004 
                       TCR     equ              4
   10 00000000 00000014 
                       MCR     equ              0x14
   11 00000000 00000018 
                       MR0     equ              0x18
   12 00000000         
   13 00000000 00000002 
                       TimerCommandReset
                               equ              2
   14 00000000 00000001 
                       TimerCommandRun
                               equ              1
   15 00000000 00000003 
                       TimerModeResetAndInterrupt
                               equ              3
   16 00000000 00000001 
                       TimerResetTimer0Interrupt
                               equ              1
   17 00000000 000000FF 
                       TimerResetAllInterrupts
                               equ              0xFF
   18 00000000         
   19 00000000         ; VIC Stuff -- UM, Table 41
   20 00000000 FFFFF000 
                       VIC     equ              0xFFFFF000  ; VIC Base Address
   21 00000000 00000010 
                       IntEnable
                               equ              0x10
   22 00000000 00000030 
                       VectAddr
                               equ              0x30
   23 00000000 00000100 
                       VectAddr0
                               equ              0x100
   24 00000000 00000200 
                       VectCtrl0
                               equ              0x200
   25 00000000         
   26 00000000 00000004 
                       Timer0ChannelNumber
                               equ              4           ; UM, Table 63
   27 00000000 00000010 



ARM Macro Assembler    Page 2 


                       Timer0Mask
                               equ              1<<Timer0ChannelNumber 
                                                            ; UM, Table 63
   28 00000000 00000005 
                       IRQslot_en
                               equ              5           ; UM, Table 58
   29 00000000         
   30 00000000 E0028018 
                       IO1DIR  EQU              0xE0028018
   31 00000000 E0028014 
                       IO1SET  EQU              0xE0028014
   32 00000000 E002801C 
                       IO1CLR  EQU              0xE002801C
   33 00000000 E0028010 
                       IO1PIN  EQU              0xE0028010
   34 00000000         
   35 00000000                 AREA             InitialisationAndMain, CODE, RE
ADONLY
   36 00000000                 IMPORT           main
   37 00000000         
   38 00000000         ; (c) Mike Brady, 2014â€“2016.
   39 00000000         
   40 00000000                 EXPORT           start
   41 00000000         start
   42 00000000         ; initialisation code
   43 00000000         
   44 00000000         ; Initialise the VIC
   45 00000000 E59F00C4        ldr              r0,=VIC     ; looking at you, V
                                                            IC!
   46 00000004         
   47 00000004 E59F10C4        ldr              r1,=irqhan
   48 00000008 E5801100        str              r1,[r0,#VectAddr0] ; associate 
                                                            our interrupt handl
                                                            er with Vectored In
                                                            terrupt 0
   49 0000000C         
   50 0000000C E3A01024        mov              r1,#Timer0ChannelNumber+(1<<IRQ
slot_en)
   51 00000010 E5801200        str              r1,[r0,#VectCtrl0] ; make Timer
                                                             0 interrupts the s
                                                            ource of Vectored I
                                                            nterrupt 0
   52 00000014         
   53 00000014 E3A01010        mov              r1,#Timer0Mask
   54 00000018 E5801010        str              r1,[r0,#IntEnable] ; enable Tim
                                                            er 0 interrupts to 
                                                            be recognised by th
                                                            e VIC
   55 0000001C         
   56 0000001C E3A01000        mov              r1,#0
   57 00000020 E5801030        str              r1,[r0,#VectAddr] ; remove any 
                                                            pending interrupt (
                                                            may not be needed)
   58 00000024         
   59 00000024         ; Initialise Timer 0
   60 00000024 E59F00A8        ldr              r0,=T0      ; looking at you, T
                                                            imer 0!
   61 00000028         
   62 00000028 E3A01002        mov              r1,#TimerCommandReset



ARM Macro Assembler    Page 3 


   63 0000002C E5801004        str              r1,[r0,#TCR]
   64 00000030         
   65 00000030 E3A010FF        mov              r1,#TimerResetAllInterrupts
   66 00000034 E5801000        str              r1,[r0,#IR]
   67 00000038         
   68 00000038 E59F1098        ldr              r1,=(14745600/200)-1 ; 5 ms = 1
                                                            /200 second
   69 0000003C E5801018        str              r1,[r0,#MR0]
   70 00000040         
   71 00000040 E3A01003        mov              r1,#TimerModeResetAndInterrupt
   72 00000044 E5801014        str              r1,[r0,#MCR]
   73 00000048         
   74 00000048 E3A01001        mov              r1,#TimerCommandRun
   75 0000004C E5801004        str              r1,[r0,#TCR]
   76 00000050         
   77 00000050         ;from here, initialisation is finished, so it should be 
                       the main body of the main program
   78 00000050         
   79 00000050 E59F1084        ldr              r1,=IO1DIR
   80 00000054 E3A0280F        ldr              r2,=0x000f0000 ;select P1.19--P
                                                            1.16
   81 00000058 E5812000        str              r2,[r1]     ;make them outputs
   82 0000005C E59F107C        ldr              r1,=IO1SET
   83 00000060 E5812000        str              r2,[r1]     ;set them to turn t
                                                            he LEDs off
   84 00000064 E59F2078        ldr              r2,=IO1CLR
   85 00000068 E59F3078        ldr              r3,=counter
   86 0000006C         ; r1 points to the SET register
   87 0000006C         ; r2 points to the CLEAR register
   88 0000006C         
   89 0000006C         wloop
   90 0000006C E1D350B0        ldrh             r5,[r3]
   91 00000070 E3550F96        cmp              r5, #600
   92 00000074 83A04702        movhi            r4, #(1<<19)
   93 00000078 85824000        strhi            r4, [r2]
   94 0000007C 8224480F        eorhi            r4, r4, #0x000F0000
   95 00000080 85814000        strhi            r4, [r1]
   96 00000084 8AFFFFF8        bhi              wloop
   97 00000088 E3550E19        cmp              r5, #400
   98 0000008C 83A04701        movhi            r4, #(1<<18)
   99 00000090 85824000        strhi            r4, [r2]
  100 00000094 8224480F        eorhi            r4, r4, #0x000F0000
  101 00000098 85814000        strhi            r4, [r1]
  102 0000009C 8AFFFFF2        bhi              wloop
  103 000000A0 E35500C8        cmp              r5, #200
  104 000000A4 83A04802        movhi            r4, #(1<<17)
  105 000000A8 85824000        strhi            r4, [r2]
  106 000000AC 8224480F        eorhi            r4, r4, #0x000F0000
  107 000000B0 85814000        strhi            r4, [r1]
  108 000000B4 8AFFFFEC        bhi              wloop
  109 000000B8 E3A04801        mov              r4, #(1<<16)
  110 000000BC E5824000        str              r4, [r2]
  111 000000C0 E224480F        eor              r4, r4, #0x000F0000
  112 000000C4 E5814000        str              r4, [r1]
  113 000000C8 EAFFFFE7        b                wloop       ; branch always
  114 000000CC         ;main program execution will never drop below the statem
                       ent above.
  115 000000CC         
  116 000000CC FFFFF000 



ARM Macro Assembler    Page 4 


              00000000 
              E0004000 
              00011FFF 
              E0028018 
              E0028014 
              E002801C 
              00000000         AREA             InterruptStuff, CODE, READONLY
  117 00000000 E24EE004 
                       irqhan  sub              lr,lr,#4
  118 00000004 E92D4003        stmfd            sp!,{r0-r1,lr} ; the lr will be
                                                             restored to the pc
                                                            
  119 00000008         
  120 00000008         ;this is the body of the interrupt handler
  121 00000008         
  122 00000008         ;here you'd put the unique part of your interrupt handle
                       r
  123 00000008         ;all the other stuff is "housekeeping" to save registers
                        and acknowledge interrupts
  124 00000008 E59F0028        ldr              r0,=counter
  125 0000000C E1D010B0        ldrh             r1,[r0]
  126 00000010 E2511001        subs             r1, #1
  127 00000014 03A01E32        moveq            r1, #800
  128 00000018 E5801000        str              r1,[r0]
  129 0000001C         
  130 0000001C         ;this is where we stop the timer from making the interru
                       pt request to the VIC
  131 0000001C         ;i.e. we 'acknowledge' the interrupt
  132 0000001C E59F0018        ldr              r0,=T0
  133 00000020 E3A01001        mov              r1,#TimerResetTimer0Interrupt
  134 00000024 E5801000        str              r1,[r0,#IR] ; remove MR0 interr
                                                            upt request from ti
                                                            mer
  135 00000028         
  136 00000028         ;here we stop the VIC from making the interrupt request 
                       to the CPU:
  137 00000028 E59F0010        ldr              r0,=VIC
  138 0000002C E3A01000        mov              r1,#0
  139 00000030 E5801030        str              r1,[r0,#VectAddr] ; reset VIC
  140 00000034         
  141 00000034 E8FD8003        ldmfd            sp!,{r0-r1,pc}^ ; return from i
                                                            nterrupt, restoring
                                                             pc from lr
  142 00000038         ; and also restoring the CPSR
  143 00000038         
  144 00000038 00000000 
              E0004000 
              FFFFF000         AREA             Subroutines, CODE, READONLY
  145 00000000         
  146 00000000                 AREA             Stuff, DATA, READWRITE
  147 00000000 20 03   counter DCW              800         ;
  148 00000002                 END
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\a
pp.d -o.\app.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Ke
il_v5\ARM\Inc\Philips --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 
1" --predefine="__UVISION_VERSION SETA 516" --list=.\listings\app.lst App.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

InitialisationAndMain 00000000

Symbol: InitialisationAndMain
   Definitions
      At line 35 in file App.s
   Uses
      None
Comment: InitialisationAndMain unused
start 00000000

Symbol: start
   Definitions
      At line 41 in file App.s
   Uses
      At line 40 in file App.s
Comment: start used once
wloop 0000006C

Symbol: wloop
   Definitions
      At line 89 in file App.s
   Uses
      At line 96 in file App.s
      At line 102 in file App.s
      At line 108 in file App.s
      At line 113 in file App.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

InterruptStuff 00000000

Symbol: InterruptStuff
   Definitions
      At line 116 in file App.s
   Uses
      None
Comment: InterruptStuff unused
irqhan 00000000

Symbol: irqhan
   Definitions
      At line 117 in file App.s
   Uses
      At line 47 in file App.s
Comment: irqhan used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Subroutines 00000000

Symbol: Subroutines
   Definitions
      At line 144 in file App.s
   Uses
      None
Comment: Subroutines unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Stuff 00000000

Symbol: Stuff
   Definitions
      At line 146 in file App.s
   Uses
      None
Comment: Stuff unused
counter 00000000

Symbol: counter
   Definitions
      At line 147 in file App.s
   Uses
      At line 85 in file App.s
      At line 124 in file App.s

2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

IO1CLR E002801C

Symbol: IO1CLR
   Definitions
      At line 32 in file App.s
   Uses
      At line 84 in file App.s
Comment: IO1CLR used once
IO1DIR E0028018

Symbol: IO1DIR
   Definitions
      At line 30 in file App.s
   Uses
      At line 79 in file App.s
Comment: IO1DIR used once
IO1PIN E0028010

Symbol: IO1PIN
   Definitions
      At line 33 in file App.s
   Uses
      None
Comment: IO1PIN unused
IO1SET E0028014

Symbol: IO1SET
   Definitions
      At line 31 in file App.s
   Uses
      At line 82 in file App.s
Comment: IO1SET used once
IR 00000000

Symbol: IR
   Definitions
      At line 8 in file App.s
   Uses
      At line 66 in file App.s
      At line 134 in file App.s

IRQslot_en 00000005

Symbol: IRQslot_en
   Definitions
      At line 28 in file App.s
   Uses
      At line 50 in file App.s
Comment: IRQslot_en used once
IntEnable 00000010

Symbol: IntEnable
   Definitions
      At line 21 in file App.s
   Uses
      At line 54 in file App.s
Comment: IntEnable used once
MCR 00000014




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: MCR
   Definitions
      At line 10 in file App.s
   Uses
      At line 72 in file App.s
Comment: MCR used once
MR0 00000018

Symbol: MR0
   Definitions
      At line 11 in file App.s
   Uses
      At line 69 in file App.s
Comment: MR0 used once
T0 E0004000

Symbol: T0
   Definitions
      At line 5 in file App.s
   Uses
      At line 60 in file App.s
      At line 132 in file App.s

T1 E0008000

Symbol: T1
   Definitions
      At line 6 in file App.s
   Uses
      None
Comment: T1 unused
TCR 00000004

Symbol: TCR
   Definitions
      At line 9 in file App.s
   Uses
      At line 63 in file App.s
      At line 75 in file App.s

Timer0ChannelNumber 00000004

Symbol: Timer0ChannelNumber
   Definitions
      At line 26 in file App.s
   Uses
      At line 27 in file App.s
      At line 50 in file App.s

Timer0Mask 00000010

Symbol: Timer0Mask
   Definitions
      At line 27 in file App.s
   Uses
      At line 53 in file App.s
Comment: Timer0Mask used once
TimerCommandReset 00000002




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

Symbol: TimerCommandReset
   Definitions
      At line 13 in file App.s
   Uses
      At line 62 in file App.s
Comment: TimerCommandReset used once
TimerCommandRun 00000001

Symbol: TimerCommandRun
   Definitions
      At line 14 in file App.s
   Uses
      At line 74 in file App.s
Comment: TimerCommandRun used once
TimerModeResetAndInterrupt 00000003

Symbol: TimerModeResetAndInterrupt
   Definitions
      At line 15 in file App.s
   Uses
      At line 71 in file App.s
Comment: TimerModeResetAndInterrupt used once
TimerResetAllInterrupts 000000FF

Symbol: TimerResetAllInterrupts
   Definitions
      At line 17 in file App.s
   Uses
      At line 65 in file App.s
Comment: TimerResetAllInterrupts used once
TimerResetTimer0Interrupt 00000001

Symbol: TimerResetTimer0Interrupt
   Definitions
      At line 16 in file App.s
   Uses
      At line 133 in file App.s
Comment: TimerResetTimer0Interrupt used once
VIC FFFFF000

Symbol: VIC
   Definitions
      At line 20 in file App.s
   Uses
      At line 45 in file App.s
      At line 137 in file App.s

VectAddr 00000030

Symbol: VectAddr
   Definitions
      At line 22 in file App.s
   Uses
      At line 57 in file App.s
      At line 139 in file App.s

VectAddr0 00000100

Symbol: VectAddr0



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 23 in file App.s
   Uses
      At line 48 in file App.s
Comment: VectAddr0 used once
VectCtrl0 00000200

Symbol: VectCtrl0
   Definitions
      At line 24 in file App.s
   Uses
      At line 51 in file App.s
Comment: VectCtrl0 used once
23 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

main 00000000

Symbol: main
   Definitions
      At line 36 in file App.s
   Uses
      None
Comment: main unused
1 symbol
369 symbols in table
